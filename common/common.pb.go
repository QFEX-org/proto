// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / This defines how the order is executed by the engine.
type OrderType int32

const (
	OrderType_LIMIT  OrderType = 0 // Limit order
	OrderType_MARKET OrderType = 1 // Market order
	OrderType_ALO    OrderType = 3 // Add Liquidity Order. If the order would cross the book, the order will be rejected.
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "LIMIT",
		1: "MARKET",
		3: "ALO",
	}
	OrderType_value = map[string]int32{
		"LIMIT":  0,
		"MARKET": 1,
		"ALO":    3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

// / This defines the direction of the order.
type OrderDirection int32

const (
	OrderDirection_BUY  OrderDirection = 0 // Buy order
	OrderDirection_SELL OrderDirection = 1 // Sell order
)

// Enum value maps for OrderDirection.
var (
	OrderDirection_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	OrderDirection_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x OrderDirection) Enum() *OrderDirection {
	p := new(OrderDirection)
	*p = x
	return p
}

func (x OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (OrderDirection) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderDirection.Descriptor instead.
func (OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

// / This defines the time in force of the order.
type OrderTimeInForce int32

const (
	OrderTimeInForce_GTC OrderTimeInForce = 0 // Good till canceled. This order will stay in the book until it is filled or canceled.
	OrderTimeInForce_IOC OrderTimeInForce = 1 // Immediate or cancel. This order will fill as much as possible and then be canceled. If the order cannot be filled immediately, the remaining quantity will be canceled.
	OrderTimeInForce_FOK OrderTimeInForce = 2 // Fill or kill. This order will be canceled if it cannot be filled immediately. If the order cannot be filled immediately, the entire order will be canceled.
)

// Enum value maps for OrderTimeInForce.
var (
	OrderTimeInForce_name = map[int32]string{
		0: "GTC",
		1: "IOC",
		2: "FOK",
	}
	OrderTimeInForce_value = map[string]int32{
		"GTC": 0,
		"IOC": 1,
		"FOK": 2,
	}
)

func (x OrderTimeInForce) Enum() *OrderTimeInForce {
	p := new(OrderTimeInForce)
	*p = x
	return p
}

func (x OrderTimeInForce) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderTimeInForce) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (OrderTimeInForce) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x OrderTimeInForce) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderTimeInForce.Descriptor instead.
func (OrderTimeInForce) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

// / Internal definition of the order action.
type OrderAction int32

const (
	OrderAction_NEW    OrderAction = 0 // Order was added
	OrderAction_MODIFY OrderAction = 1 // Order was modified
	OrderAction_CANCEL OrderAction = 2 // Order was canceled
	OrderAction_FILL   OrderAction = 4 // Order was filled
)

// Enum value maps for OrderAction.
var (
	OrderAction_name = map[int32]string{
		0: "NEW",
		1: "MODIFY",
		2: "CANCEL",
		4: "FILL",
	}
	OrderAction_value = map[string]int32{
		"NEW":    0,
		"MODIFY": 1,
		"CANCEL": 2,
		"FILL":   4,
	}
)

func (x OrderAction) Enum() *OrderAction {
	p := new(OrderAction)
	*p = x
	return p
}

func (x OrderAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderAction) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (OrderAction) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x OrderAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderAction.Descriptor instead.
func (OrderAction) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

// / This is returned on any order response. This will indicate the current status of the order.
type OrderStatus int32

const (
	OrderStatus_ACK                                  OrderStatus = 0  // Order accepted.
	OrderStatus_FILLED                               OrderStatus = 2  // Order filled, this could be partially filled.
	OrderStatus_MODIFIED                             OrderStatus = 20 // Order successfully modified.
	OrderStatus_CANCELLED                            OrderStatus = 30 // Order successfully cancelled.
	OrderStatus_CANCELLED_STP                        OrderStatus = 31 // Order cancelled by self trade prevention.
	OrderStatus_REJECTED                             OrderStatus = 50 // Order rejected
	OrderStatus_NO_SUCH_ORDER                        OrderStatus = 52 // Cancel rejected, no such order exists.
	OrderStatus_INVALID_ORDER_TYPE                   OrderStatus = 53 // Invalid order type.
	OrderStatus_BAD_SYMBOL                           OrderStatus = 54 // Invalid symbol.
	OrderStatus_PRICE_LESS_THAN_MIN_PRICE            OrderStatus = 55 // Price less than minimum price for this symbol.
	OrderStatus_PRICE_GREATER_THAN_MAX_PRICE         OrderStatus = 56 // Price greater than maximum price for this symbol.
	OrderStatus_CANNOT_MODIFY_PARTIAL_FILL           OrderStatus = 58 // Cannot modify partially filled order. Please cancel your current order and place a new order.
	OrderStatus_FAILED_MARGIN_CHECK                  OrderStatus = 60 // Failed margin check. Please check your available balance.
	OrderStatus_INVALID_TICK_SIZE_PRECISION_PRICE    OrderStatus = 63 // Invalid tick size for this symbol. Check the price tick size in the reference data.
	OrderStatus_INVALID_TICK_SIZE_PRECISION_QUANTITY OrderStatus = 64 // Invalid lot size for this symbol. Check the lot size in the reference data.
	OrderStatus_QUANTITY_LESS_THAN_MIN_QUANTITY      OrderStatus = 65 // Quantity less than minimum for this symbol. Check the minimum quantity in the reference data.
	OrderStatus_QUANTITY_GREATER_THAN_MAX_QUANTITY   OrderStatus = 66 // Quantity greater than maximum for this symbol. Check the maximum quantity in the reference data.
	OrderStatus_REJECTED_GREATER_THAN_MAX_PRICE_BAND OrderStatus = 67 // Price greater than max price. Check the max price in the reference data.
	OrderStatus_REJECTED_LESS_THAN_MIN_PRICE_BAND    OrderStatus = 68 // Price less than min price. Check the min price in the reference data.
	OrderStatus_INVALID_TIME_IN_FORCE                OrderStatus = 69 // Invalid time in force for this order type.
	OrderStatus_REJECTED_WOULD_BREACH_MAX_POSITION   OrderStatus = 70 // Would breach max position. Check the max position for your account in gRPC PortService.GetUserLeverage.
	OrderStatus_CANNOT_MODIFY_NO_SUCH_ORDER          OrderStatus = 71 // Failed to modify this order. Order does not exist.
	OrderStatus_REJECTED_MARKET_CLOSED               OrderStatus = 72 // QFEX is currently not accepting orders for this symbol.
	OrderStatus_RATE_LIMITED                         OrderStatus = 97 // You have sent too many requests to trade.qfex.com. Please contact support@qfex.com to raise your limits.
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0:  "ACK",
		2:  "FILLED",
		20: "MODIFIED",
		30: "CANCELLED",
		31: "CANCELLED_STP",
		50: "REJECTED",
		52: "NO_SUCH_ORDER",
		53: "INVALID_ORDER_TYPE",
		54: "BAD_SYMBOL",
		55: "PRICE_LESS_THAN_MIN_PRICE",
		56: "PRICE_GREATER_THAN_MAX_PRICE",
		58: "CANNOT_MODIFY_PARTIAL_FILL",
		60: "FAILED_MARGIN_CHECK",
		63: "INVALID_TICK_SIZE_PRECISION_PRICE",
		64: "INVALID_TICK_SIZE_PRECISION_QUANTITY",
		65: "QUANTITY_LESS_THAN_MIN_QUANTITY",
		66: "QUANTITY_GREATER_THAN_MAX_QUANTITY",
		67: "REJECTED_GREATER_THAN_MAX_PRICE_BAND",
		68: "REJECTED_LESS_THAN_MIN_PRICE_BAND",
		69: "INVALID_TIME_IN_FORCE",
		70: "REJECTED_WOULD_BREACH_MAX_POSITION",
		71: "CANNOT_MODIFY_NO_SUCH_ORDER",
		72: "REJECTED_MARKET_CLOSED",
		97: "RATE_LIMITED",
	}
	OrderStatus_value = map[string]int32{
		"ACK":                                  0,
		"FILLED":                               2,
		"MODIFIED":                             20,
		"CANCELLED":                            30,
		"CANCELLED_STP":                        31,
		"REJECTED":                             50,
		"NO_SUCH_ORDER":                        52,
		"INVALID_ORDER_TYPE":                   53,
		"BAD_SYMBOL":                           54,
		"PRICE_LESS_THAN_MIN_PRICE":            55,
		"PRICE_GREATER_THAN_MAX_PRICE":         56,
		"CANNOT_MODIFY_PARTIAL_FILL":           58,
		"FAILED_MARGIN_CHECK":                  60,
		"INVALID_TICK_SIZE_PRECISION_PRICE":    63,
		"INVALID_TICK_SIZE_PRECISION_QUANTITY": 64,
		"QUANTITY_LESS_THAN_MIN_QUANTITY":      65,
		"QUANTITY_GREATER_THAN_MAX_QUANTITY":   66,
		"REJECTED_GREATER_THAN_MAX_PRICE_BAND": 67,
		"REJECTED_LESS_THAN_MIN_PRICE_BAND":    68,
		"INVALID_TIME_IN_FORCE":                69,
		"REJECTED_WOULD_BREACH_MAX_POSITION":   70,
		"CANNOT_MODIFY_NO_SUCH_ORDER":          71,
		"REJECTED_MARKET_CLOSED":               72,
		"RATE_LIMITED":                         97,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type SymbolStatus int32

const (
	SymbolStatus_ACTIVE   SymbolStatus = 0 // Symbol is active.
	SymbolStatus_INACTIVE SymbolStatus = 1 // Symbol is temporarily suspended.
	SymbolStatus_DELISTED SymbolStatus = 2 // Symbol is permanently suspended.
)

// Enum value maps for SymbolStatus.
var (
	SymbolStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "INACTIVE",
		2: "DELISTED",
	}
	SymbolStatus_value = map[string]int32{
		"ACTIVE":   0,
		"INACTIVE": 1,
		"DELISTED": 2,
	}
)

func (x SymbolStatus) Enum() *SymbolStatus {
	p := new(SymbolStatus)
	*p = x
	return p
}

func (x SymbolStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SymbolStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (SymbolStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x SymbolStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SymbolStatus.Descriptor instead.
func (SymbolStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

type CandlesInterval int32

const (
	CandlesInterval_ONE_MINUTE      CandlesInterval = 0 // 1 minute candle.
	CandlesInterval_FIVE_MINUTES    CandlesInterval = 2 // 5 minute candle.
	CandlesInterval_FIFTEEN_MINUTES CandlesInterval = 3 // 15 minute candle.
	CandlesInterval_THIRTY_MINUTES  CandlesInterval = 4 // 30 minute candle.
	CandlesInterval_ONE_HOUR        CandlesInterval = 5 // 1 hour candle.
	CandlesInterval_FOUR_HOURS      CandlesInterval = 6 // 4 hour candle.
	CandlesInterval_ONE_DAY         CandlesInterval = 7 // 1 day candle.
)

// Enum value maps for CandlesInterval.
var (
	CandlesInterval_name = map[int32]string{
		0: "ONE_MINUTE",
		2: "FIVE_MINUTES",
		3: "FIFTEEN_MINUTES",
		4: "THIRTY_MINUTES",
		5: "ONE_HOUR",
		6: "FOUR_HOURS",
		7: "ONE_DAY",
	}
	CandlesInterval_value = map[string]int32{
		"ONE_MINUTE":      0,
		"FIVE_MINUTES":    2,
		"FIFTEEN_MINUTES": 3,
		"THIRTY_MINUTES":  4,
		"ONE_HOUR":        5,
		"FOUR_HOURS":      6,
		"ONE_DAY":         7,
	}
)

func (x CandlesInterval) Enum() *CandlesInterval {
	p := new(CandlesInterval)
	*p = x
	return p
}

func (x CandlesInterval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CandlesInterval) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (CandlesInterval) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x CandlesInterval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CandlesInterval.Descriptor instead.
func (CandlesInterval) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *AckResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *ListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TradePublic struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TradeId        string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	Symbol         string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price          int64                  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity       int64                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=order_timestamp,json=orderTimestamp,proto3" json:"order_timestamp,omitempty"`
	AggressorSide  OrderDirection         `protobuf:"varint,6,opt,name=aggressor_side,json=aggressorSide,proto3,enum=common.OrderDirection" json:"aggressor_side,omitempty"`
	BuyOrderId     string                 `protobuf:"bytes,8,opt,name=buy_order_id,json=buyOrderId,proto3" json:"buy_order_id,omitempty"`
	SellOrderId    string                 `protobuf:"bytes,9,opt,name=sell_order_id,json=sellOrderId,proto3" json:"sell_order_id,omitempty"`
	BuyUserId      string                 `protobuf:"bytes,10,opt,name=buy_user_id,json=buyUserId,proto3" json:"buy_user_id,omitempty"`
	SellUserId     string                 `protobuf:"bytes,11,opt,name=sell_user_id,json=sellUserId,proto3" json:"sell_user_id,omitempty"`
	BuyFee         int64                  `protobuf:"varint,12,opt,name=buy_fee,json=buyFee,proto3" json:"buy_fee,omitempty"`
	SellFee        int64                  `protobuf:"varint,13,opt,name=sell_fee,json=sellFee,proto3" json:"sell_fee,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TradePublic) Reset() {
	*x = TradePublic{}
	mi := &file_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradePublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradePublic) ProtoMessage() {}

func (x *TradePublic) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradePublic.ProtoReflect.Descriptor instead.
func (*TradePublic) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *TradePublic) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *TradePublic) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradePublic) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TradePublic) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TradePublic) GetOrderTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderTimestamp
	}
	return nil
}

func (x *TradePublic) GetAggressorSide() OrderDirection {
	if x != nil {
		return x.AggressorSide
	}
	return OrderDirection_BUY
}

func (x *TradePublic) GetBuyOrderId() string {
	if x != nil {
		return x.BuyOrderId
	}
	return ""
}

func (x *TradePublic) GetSellOrderId() string {
	if x != nil {
		return x.SellOrderId
	}
	return ""
}

func (x *TradePublic) GetBuyUserId() string {
	if x != nil {
		return x.BuyUserId
	}
	return ""
}

func (x *TradePublic) GetSellUserId() string {
	if x != nil {
		return x.SellUserId
	}
	return ""
}

func (x *TradePublic) GetBuyFee() int64 {
	if x != nil {
		return x.BuyFee
	}
	return 0
}

func (x *TradePublic) GetSellFee() int64 {
	if x != nil {
		return x.SellFee
	}
	return 0
}

type GetUserLimitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserLimitRequest) Reset() {
	*x = GetUserLimitRequest{}
	mi := &file_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLimitRequest) ProtoMessage() {}

func (x *GetUserLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLimitRequest.ProtoReflect.Descriptor instead.
func (*GetUserLimitRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserLimitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserLimitRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserLimitRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TradesPublic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trades        []*TradePublic         `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Count         int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradesPublic) Reset() {
	*x = TradesPublic{}
	mi := &file_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradesPublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradesPublic) ProtoMessage() {}

func (x *TradesPublic) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradesPublic.ProtoReflect.Descriptor instead.
func (*TradesPublic) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *TradesPublic) GetTrades() []*TradePublic {
	if x != nil {
		return x.Trades
	}
	return nil
}

func (x *TradesPublic) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TradesPublic) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OrderBookEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         uint64                 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      uint64                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookEntry) Reset() {
	*x = OrderBookEntry{}
	mi := &file_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookEntry) ProtoMessage() {}

func (x *OrderBookEntry) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookEntry.ProtoReflect.Descriptor instead.
func (*OrderBookEntry) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *OrderBookEntry) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderBookEntry) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type OrderBook struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Symbol          string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bids            []*OrderBookEntry      `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks            []*OrderBookEntry      `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	LastTradedPrice uint64                 `protobuf:"varint,5,opt,name=last_traded_price,json=lastTradedPrice,proto3" json:"last_traded_price,omitempty"`
	Sequence        uint64                 `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OrderBook) Reset() {
	*x = OrderBook{}
	mi := &file_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBook) ProtoMessage() {}

func (x *OrderBook) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBook.ProtoReflect.Descriptor instead.
func (*OrderBook) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *OrderBook) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderBook) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OrderBook) GetBids() []*OrderBookEntry {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBook) GetAsks() []*OrderBookEntry {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBook) GetLastTradedPrice() uint64 {
	if x != nil {
		return x.LastTradedPrice
	}
	return 0
}

func (x *OrderBook) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type BalancePublic struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Deposit          int64                  `protobuf:"varint,3,opt,name=deposit,proto3" json:"deposit,omitempty"`
	RealisedPnl      int64                  `protobuf:"varint,4,opt,name=realised_pnl,json=realisedPnl,proto3" json:"realised_pnl,omitempty"`
	OrderMargin      int64                  `protobuf:"varint,5,opt,name=order_margin,json=orderMargin,proto3" json:"order_margin,omitempty"`
	PositionMargin   int64                  `protobuf:"varint,6,opt,name=position_margin,json=positionMargin,proto3" json:"position_margin,omitempty"`
	UnrealisedPnl    int64                  `protobuf:"varint,7,opt,name=unrealised_pnl,json=unrealisedPnl,proto3" json:"unrealised_pnl,omitempty"`
	AvailableBalance int64                  `protobuf:"varint,8,opt,name=available_balance,json=availableBalance,proto3" json:"available_balance,omitempty"`
	NetFunding       int64                  `protobuf:"varint,9,opt,name=net_funding,json=netFunding,proto3" json:"net_funding,omitempty"`
	Fees             int64                  `protobuf:"varint,10,opt,name=fees,proto3" json:"fees,omitempty"`
	IsInstitution    bool                   `protobuf:"varint,50,opt,name=is_institution,json=isInstitution,proto3" json:"is_institution,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BalancePublic) Reset() {
	*x = BalancePublic{}
	mi := &file_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalancePublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancePublic) ProtoMessage() {}

func (x *BalancePublic) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancePublic.ProtoReflect.Descriptor instead.
func (*BalancePublic) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *BalancePublic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BalancePublic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BalancePublic) GetDeposit() int64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *BalancePublic) GetRealisedPnl() int64 {
	if x != nil {
		return x.RealisedPnl
	}
	return 0
}

func (x *BalancePublic) GetOrderMargin() int64 {
	if x != nil {
		return x.OrderMargin
	}
	return 0
}

func (x *BalancePublic) GetPositionMargin() int64 {
	if x != nil {
		return x.PositionMargin
	}
	return 0
}

func (x *BalancePublic) GetUnrealisedPnl() int64 {
	if x != nil {
		return x.UnrealisedPnl
	}
	return 0
}

func (x *BalancePublic) GetAvailableBalance() int64 {
	if x != nil {
		return x.AvailableBalance
	}
	return 0
}

func (x *BalancePublic) GetNetFunding() int64 {
	if x != nil {
		return x.NetFunding
	}
	return 0
}

func (x *BalancePublic) GetFees() int64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

func (x *BalancePublic) GetIsInstitution() bool {
	if x != nil {
		return x.IsInstitution
	}
	return false
}

func (x *BalancePublic) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AppendOrderRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	OrderId                     string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Symbol                      string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side                        OrderDirection         `protobuf:"varint,3,opt,name=side,proto3,enum=common.OrderDirection" json:"side,omitempty"`
	Type                        OrderType              `protobuf:"varint,4,opt,name=type,proto3,enum=common.OrderType" json:"type,omitempty"`
	TimeInForce                 OrderTimeInForce       `protobuf:"varint,5,opt,name=time_in_force,json=timeInForce,proto3,enum=common.OrderTimeInForce" json:"time_in_force,omitempty"`
	OrderAction                 *OrderAction           `protobuf:"varint,6,opt,name=order_action,json=orderAction,proto3,enum=common.OrderAction,oneof" json:"order_action,omitempty"` // NEW/CANCEL/
	Quantity                    uint64                 `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                       uint64                 `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	UserId                      string                 `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OldQuantity                 *uint64                `protobuf:"varint,11,opt,name=old_quantity,json=oldQuantity,proto3,oneof" json:"old_quantity,omitempty"`
	OldPrice                    *uint64                `protobuf:"varint,12,opt,name=old_price,json=oldPrice,proto3,oneof" json:"old_price,omitempty"`
	ClientOrderId               string                 `protobuf:"bytes,13,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	PassiveQty                  uint64                 `protobuf:"varint,14,opt,name=passive_qty,json=passiveQty,proto3" json:"passive_qty,omitempty"`
	BestBid                     *OrderBookEntry        `protobuf:"bytes,20,opt,name=best_bid,json=bestBid,proto3" json:"best_bid,omitempty"`
	BestAsk                     *OrderBookEntry        `protobuf:"bytes,21,opt,name=best_ask,json=bestAsk,proto3" json:"best_ask,omitempty"`
	OrderStatus                 OrderStatus            `protobuf:"varint,50,opt,name=order_status,json=orderStatus,proto3,enum=common.OrderStatus" json:"order_status,omitempty"`
	IsPassive                   *bool                  `protobuf:"varint,51,opt,name=is_passive,json=isPassive,proto3,oneof" json:"is_passive,omitempty"`
	PortIngressEntryTime        *timestamppb.Timestamp `protobuf:"bytes,60,opt,name=port_ingress_entry_time,json=portIngressEntryTime,proto3" json:"port_ingress_entry_time,omitempty"`
	PortIngressExitTime         *timestamppb.Timestamp `protobuf:"bytes,61,opt,name=port_ingress_exit_time,json=portIngressExitTime,proto3" json:"port_ingress_exit_time,omitempty"`
	UserServiceIngressEntryTime *timestamppb.Timestamp `protobuf:"bytes,62,opt,name=user_service_ingress_entry_time,json=userServiceIngressEntryTime,proto3" json:"user_service_ingress_entry_time,omitempty"`
	UserServiceIngressExitTime  *timestamppb.Timestamp `protobuf:"bytes,63,opt,name=user_service_ingress_exit_time,json=userServiceIngressExitTime,proto3" json:"user_service_ingress_exit_time,omitempty"`
	EngineEntryTime             *timestamppb.Timestamp `protobuf:"bytes,64,opt,name=engine_entry_time,json=engineEntryTime,proto3" json:"engine_entry_time,omitempty"`
	EngineExitTime              *timestamppb.Timestamp `protobuf:"bytes,65,opt,name=engine_exit_time,json=engineExitTime,proto3" json:"engine_exit_time,omitempty"`
	UserServiceEgressEntryTime  *timestamppb.Timestamp `protobuf:"bytes,66,opt,name=user_service_egress_entry_time,json=userServiceEgressEntryTime,proto3" json:"user_service_egress_entry_time,omitempty"`
	UserServiceEgressExitTime   *timestamppb.Timestamp `protobuf:"bytes,67,opt,name=user_service_egress_exit_time,json=userServiceEgressExitTime,proto3" json:"user_service_egress_exit_time,omitempty"`
	PortEgressEntryTime         *timestamppb.Timestamp `protobuf:"bytes,68,opt,name=port_egress_entry_time,json=portEgressEntryTime,proto3" json:"port_egress_entry_time,omitempty"`
	CorrelationId               *string                `protobuf:"bytes,98,opt,name=correlation_id,json=correlationId,proto3,oneof" json:"correlation_id,omitempty"`
	Timestamp                   *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *AppendOrderRequest) Reset() {
	*x = AppendOrderRequest{}
	mi := &file_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendOrderRequest) ProtoMessage() {}

func (x *AppendOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendOrderRequest.ProtoReflect.Descriptor instead.
func (*AppendOrderRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *AppendOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AppendOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AppendOrderRequest) GetSide() OrderDirection {
	if x != nil {
		return x.Side
	}
	return OrderDirection_BUY
}

func (x *AppendOrderRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_LIMIT
}

func (x *AppendOrderRequest) GetTimeInForce() OrderTimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return OrderTimeInForce_GTC
}

func (x *AppendOrderRequest) GetOrderAction() OrderAction {
	if x != nil && x.OrderAction != nil {
		return *x.OrderAction
	}
	return OrderAction_NEW
}

func (x *AppendOrderRequest) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AppendOrderRequest) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AppendOrderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppendOrderRequest) GetOldQuantity() uint64 {
	if x != nil && x.OldQuantity != nil {
		return *x.OldQuantity
	}
	return 0
}

func (x *AppendOrderRequest) GetOldPrice() uint64 {
	if x != nil && x.OldPrice != nil {
		return *x.OldPrice
	}
	return 0
}

func (x *AppendOrderRequest) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *AppendOrderRequest) GetPassiveQty() uint64 {
	if x != nil {
		return x.PassiveQty
	}
	return 0
}

func (x *AppendOrderRequest) GetBestBid() *OrderBookEntry {
	if x != nil {
		return x.BestBid
	}
	return nil
}

func (x *AppendOrderRequest) GetBestAsk() *OrderBookEntry {
	if x != nil {
		return x.BestAsk
	}
	return nil
}

func (x *AppendOrderRequest) GetOrderStatus() OrderStatus {
	if x != nil {
		return x.OrderStatus
	}
	return OrderStatus_ACK
}

func (x *AppendOrderRequest) GetIsPassive() bool {
	if x != nil && x.IsPassive != nil {
		return *x.IsPassive
	}
	return false
}

func (x *AppendOrderRequest) GetPortIngressEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PortIngressEntryTime
	}
	return nil
}

func (x *AppendOrderRequest) GetPortIngressExitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PortIngressExitTime
	}
	return nil
}

func (x *AppendOrderRequest) GetUserServiceIngressEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserServiceIngressEntryTime
	}
	return nil
}

func (x *AppendOrderRequest) GetUserServiceIngressExitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserServiceIngressExitTime
	}
	return nil
}

func (x *AppendOrderRequest) GetEngineEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EngineEntryTime
	}
	return nil
}

func (x *AppendOrderRequest) GetEngineExitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EngineExitTime
	}
	return nil
}

func (x *AppendOrderRequest) GetUserServiceEgressEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserServiceEgressEntryTime
	}
	return nil
}

func (x *AppendOrderRequest) GetUserServiceEgressExitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserServiceEgressExitTime
	}
	return nil
}

func (x *AppendOrderRequest) GetPortEgressEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PortEgressEntryTime
	}
	return nil
}

func (x *AppendOrderRequest) GetCorrelationId() string {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return ""
}

func (x *AppendOrderRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Underlier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         uint64                 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Underlier) Reset() {
	*x = Underlier{}
	mi := &file_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Underlier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Underlier) ProtoMessage() {}

func (x *Underlier) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Underlier.ProtoReflect.Descriptor instead.
func (*Underlier) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *Underlier) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Underlier) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Underlier) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type FundingRate struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Symbol               string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Rate                 int64                  `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
	TimeRemainingSeconds uint64                 `protobuf:"varint,3,opt,name=time_remaining_seconds,json=timeRemainingSeconds,proto3" json:"time_remaining_seconds,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FundingRate) Reset() {
	*x = FundingRate{}
	mi := &file_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundingRate) ProtoMessage() {}

func (x *FundingRate) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundingRate.ProtoReflect.Descriptor instead.
func (*FundingRate) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *FundingRate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *FundingRate) GetRate() int64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *FundingRate) GetTimeRemainingSeconds() uint64 {
	if x != nil {
		return x.TimeRemainingSeconds
	}
	return 0
}

func (x *FundingRate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AllOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*AppendOrderRequest  `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Count         int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllOrdersResponse) Reset() {
	*x = AllOrdersResponse{}
	mi := &file_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllOrdersResponse) ProtoMessage() {}

func (x *AllOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllOrdersResponse.ProtoReflect.Descriptor instead.
func (*AllOrdersResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *AllOrdersResponse) GetOrders() []*AppendOrderRequest {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *AllOrdersResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AllOrdersResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeVolume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TradeAmount   int64                  `protobuf:"varint,2,opt,name=trade_amount,json=tradeAmount,proto3" json:"trade_amount,omitempty"`
	TradeVolume   int64                  `protobuf:"varint,3,opt,name=trade_volume,json=tradeVolume,proto3" json:"trade_volume,omitempty"`
	PriceChange   int64                  `protobuf:"varint,4,opt,name=price_change,json=priceChange,proto3" json:"price_change,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeVolume) Reset() {
	*x = TradeVolume{}
	mi := &file_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeVolume) ProtoMessage() {}

func (x *TradeVolume) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeVolume.ProtoReflect.Descriptor instead.
func (*TradeVolume) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *TradeVolume) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeVolume) GetTradeAmount() int64 {
	if x != nil {
		return x.TradeAmount
	}
	return 0
}

func (x *TradeVolume) GetTradeVolume() int64 {
	if x != nil {
		return x.TradeVolume
	}
	return 0
}

func (x *TradeVolume) GetPriceChange() int64 {
	if x != nil {
		return x.PriceChange
	}
	return 0
}

func (x *TradeVolume) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type CandleInternal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open          uint64                 `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	High          uint64                 `protobuf:"varint,4,opt,name=high,proto3" json:"high,omitempty"`
	Low           uint64                 `protobuf:"varint,5,opt,name=low,proto3" json:"low,omitempty"`
	Close         uint64                 `protobuf:"varint,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume        uint64                 `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Period        uint64                 `protobuf:"varint,8,opt,name=period,proto3" json:"period,omitempty"` // in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CandleInternal) Reset() {
	*x = CandleInternal{}
	mi := &file_common_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandleInternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleInternal) ProtoMessage() {}

func (x *CandleInternal) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleInternal.ProtoReflect.Descriptor instead.
func (*CandleInternal) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *CandleInternal) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CandleInternal) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CandleInternal) GetOpen() uint64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *CandleInternal) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CandleInternal) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *CandleInternal) GetClose() uint64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *CandleInternal) GetVolume() uint64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CandleInternal) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type DayMarketHours struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Open          string                 `protobuf:"bytes,1,opt,name=open,proto3" json:"open,omitempty"`
	Close         string                 `protobuf:"bytes,2,opt,name=close,proto3" json:"close,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayMarketHours) Reset() {
	*x = DayMarketHours{}
	mi := &file_common_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayMarketHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayMarketHours) ProtoMessage() {}

func (x *DayMarketHours) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayMarketHours.ProtoReflect.Descriptor instead.
func (*DayMarketHours) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *DayMarketHours) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *DayMarketHours) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

type MarketHours struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tz            string                 `protobuf:"bytes,1,opt,name=tz,proto3" json:"tz,omitempty"`
	Monday        *DayMarketHours        `protobuf:"bytes,2,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday       *DayMarketHours        `protobuf:"bytes,3,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday     *DayMarketHours        `protobuf:"bytes,4,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday      *DayMarketHours        `protobuf:"bytes,5,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday        *DayMarketHours        `protobuf:"bytes,6,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday      *DayMarketHours        `protobuf:"bytes,7,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday        *DayMarketHours        `protobuf:"bytes,8,opt,name=sunday,proto3" json:"sunday,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketHours) Reset() {
	*x = MarketHours{}
	mi := &file_common_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketHours) ProtoMessage() {}

func (x *MarketHours) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketHours.ProtoReflect.Descriptor instead.
func (*MarketHours) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *MarketHours) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

func (x *MarketHours) GetMonday() *DayMarketHours {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *MarketHours) GetTuesday() *DayMarketHours {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *MarketHours) GetWednesday() *DayMarketHours {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *MarketHours) GetThursday() *DayMarketHours {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *MarketHours) GetFriday() *DayMarketHours {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *MarketHours) GetSaturday() *DayMarketHours {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *MarketHours) GetSunday() *DayMarketHours {
	if x != nil {
		return x.Sunday
	}
	return nil
}

type SymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	mi := &file_common_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *SymbolRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

var File_common_proto protoreflect.FileDescriptor

const file_common_proto_rawDesc = "" +
	"\n" +
	"\fcommon.proto\x12\x06common\x1a\x1fgoogle/protobuf/timestamp.proto\"\a\n" +
	"\x05Empty\"a\n" +
	"\vAckResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\";\n" +
	"\vListRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"\xb2\x03\n" +
	"\vTradePublic\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\tR\atradeId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x03R\x05price\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x03R\bquantity\x12C\n" +
	"\x0forder_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0eorderTimestamp\x12=\n" +
	"\x0eaggressor_side\x18\x06 \x01(\x0e2\x16.common.OrderDirectionR\raggressorSide\x12 \n" +
	"\fbuy_order_id\x18\b \x01(\tR\n" +
	"buyOrderId\x12\"\n" +
	"\rsell_order_id\x18\t \x01(\tR\vsellOrderId\x12\x1e\n" +
	"\vbuy_user_id\x18\n" +
	" \x01(\tR\tbuyUserId\x12 \n" +
	"\fsell_user_id\x18\v \x01(\tR\n" +
	"sellUserId\x12\x17\n" +
	"\abuy_fee\x18\f \x01(\x03R\x06buyFee\x12\x19\n" +
	"\bsell_fee\x18\r \x01(\x03R\asellFee\"\\\n" +
	"\x13GetUserLimitRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"\x8b\x01\n" +
	"\fTradesPublic\x12+\n" +
	"\x06trades\x18\x01 \x03(\v2\x13.common.TradePublicR\x06trades\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\"&\n" +
	"\vUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"B\n" +
	"\x0eOrderBookEntry\x12\x14\n" +
	"\x05price\x18\x01 \x01(\x04R\x05price\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x04R\bquantity\"\xfd\x01\n" +
	"\tOrderBook\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12*\n" +
	"\x04bids\x18\x03 \x03(\v2\x16.common.OrderBookEntryR\x04bids\x12*\n" +
	"\x04asks\x18\x04 \x03(\v2\x16.common.OrderBookEntryR\x04asks\x12*\n" +
	"\x11last_traded_price\x18\x05 \x01(\x04R\x0flastTradedPrice\x12\x1a\n" +
	"\bsequence\x18\x06 \x01(\x04R\bsequence\"\xab\x03\n" +
	"\rBalancePublic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\adeposit\x18\x03 \x01(\x03R\adeposit\x12!\n" +
	"\frealised_pnl\x18\x04 \x01(\x03R\vrealisedPnl\x12!\n" +
	"\forder_margin\x18\x05 \x01(\x03R\vorderMargin\x12'\n" +
	"\x0fposition_margin\x18\x06 \x01(\x03R\x0epositionMargin\x12%\n" +
	"\x0eunrealised_pnl\x18\a \x01(\x03R\runrealisedPnl\x12+\n" +
	"\x11available_balance\x18\b \x01(\x03R\x10availableBalance\x12\x1f\n" +
	"\vnet_funding\x18\t \x01(\x03R\n" +
	"netFunding\x12\x12\n" +
	"\x04fees\x18\n" +
	" \x01(\x03R\x04fees\x12%\n" +
	"\x0eis_institution\x182 \x01(\bR\risInstitution\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xf0\f\n" +
	"\x12AppendOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12*\n" +
	"\x04side\x18\x03 \x01(\x0e2\x16.common.OrderDirectionR\x04side\x12%\n" +
	"\x04type\x18\x04 \x01(\x0e2\x11.common.OrderTypeR\x04type\x12<\n" +
	"\rtime_in_force\x18\x05 \x01(\x0e2\x18.common.OrderTimeInForceR\vtimeInForce\x12;\n" +
	"\forder_action\x18\x06 \x01(\x0e2\x13.common.OrderActionH\x00R\vorderAction\x88\x01\x01\x12\x1a\n" +
	"\bquantity\x18\a \x01(\x04R\bquantity\x12\x14\n" +
	"\x05price\x18\b \x01(\x04R\x05price\x12\x17\n" +
	"\auser_id\x18\n" +
	" \x01(\tR\x06userId\x12&\n" +
	"\fold_quantity\x18\v \x01(\x04H\x01R\voldQuantity\x88\x01\x01\x12 \n" +
	"\told_price\x18\f \x01(\x04H\x02R\boldPrice\x88\x01\x01\x12&\n" +
	"\x0fclient_order_id\x18\r \x01(\tR\rclientOrderId\x12\x1f\n" +
	"\vpassive_qty\x18\x0e \x01(\x04R\n" +
	"passiveQty\x121\n" +
	"\bbest_bid\x18\x14 \x01(\v2\x16.common.OrderBookEntryR\abestBid\x121\n" +
	"\bbest_ask\x18\x15 \x01(\v2\x16.common.OrderBookEntryR\abestAsk\x126\n" +
	"\forder_status\x182 \x01(\x0e2\x13.common.OrderStatusR\vorderStatus\x12\"\n" +
	"\n" +
	"is_passive\x183 \x01(\bH\x03R\tisPassive\x88\x01\x01\x12Q\n" +
	"\x17port_ingress_entry_time\x18< \x01(\v2\x1a.google.protobuf.TimestampR\x14portIngressEntryTime\x12O\n" +
	"\x16port_ingress_exit_time\x18= \x01(\v2\x1a.google.protobuf.TimestampR\x13portIngressExitTime\x12`\n" +
	"\x1fuser_service_ingress_entry_time\x18> \x01(\v2\x1a.google.protobuf.TimestampR\x1buserServiceIngressEntryTime\x12^\n" +
	"\x1euser_service_ingress_exit_time\x18? \x01(\v2\x1a.google.protobuf.TimestampR\x1auserServiceIngressExitTime\x12F\n" +
	"\x11engine_entry_time\x18@ \x01(\v2\x1a.google.protobuf.TimestampR\x0fengineEntryTime\x12D\n" +
	"\x10engine_exit_time\x18A \x01(\v2\x1a.google.protobuf.TimestampR\x0eengineExitTime\x12^\n" +
	"\x1euser_service_egress_entry_time\x18B \x01(\v2\x1a.google.protobuf.TimestampR\x1auserServiceEgressEntryTime\x12\\\n" +
	"\x1duser_service_egress_exit_time\x18C \x01(\v2\x1a.google.protobuf.TimestampR\x19userServiceEgressExitTime\x12O\n" +
	"\x16port_egress_entry_time\x18D \x01(\v2\x1a.google.protobuf.TimestampR\x13portEgressEntryTime\x12*\n" +
	"\x0ecorrelation_id\x18b \x01(\tH\x04R\rcorrelationId\x88\x01\x01\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestampB\x0f\n" +
	"\r_order_actionB\x0f\n" +
	"\r_old_quantityB\f\n" +
	"\n" +
	"_old_priceB\r\n" +
	"\v_is_passiveB\x11\n" +
	"\x0f_correlation_id\"s\n" +
	"\tUnderlier\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x04R\x05price\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xa9\x01\n" +
	"\vFundingRate\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04rate\x18\x02 \x01(\x03R\x04rate\x124\n" +
	"\x16time_remaining_seconds\x18\x03 \x01(\x04R\x14timeRemainingSeconds\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x97\x01\n" +
	"\x11AllOrdersResponse\x122\n" +
	"\x06orders\x18\x01 \x03(\v2\x1a.common.AppendOrderRequestR\x06orders\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\"\xc8\x01\n" +
	"\vTradeVolume\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12!\n" +
	"\ftrade_amount\x18\x02 \x01(\x03R\vtradeAmount\x12!\n" +
	"\ftrade_volume\x18\x03 \x01(\x03R\vtradeVolume\x12!\n" +
	"\fprice_change\x18\x04 \x01(\x03R\vpriceChange\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xe2\x01\n" +
	"\x0eCandleInternal\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x04R\x04open\x12\x12\n" +
	"\x04high\x18\x04 \x01(\x04R\x04high\x12\x10\n" +
	"\x03low\x18\x05 \x01(\x04R\x03low\x12\x14\n" +
	"\x05close\x18\x06 \x01(\x04R\x05close\x12\x16\n" +
	"\x06volume\x18\a \x01(\x04R\x06volume\x12\x16\n" +
	"\x06period\x18\b \x01(\x04R\x06period\":\n" +
	"\x0eDayMarketHours\x12\x12\n" +
	"\x04open\x18\x01 \x01(\tR\x04open\x12\x14\n" +
	"\x05close\x18\x02 \x01(\tR\x05close\"\xfd\x02\n" +
	"\vMarketHours\x12\x0e\n" +
	"\x02tz\x18\x01 \x01(\tR\x02tz\x12.\n" +
	"\x06monday\x18\x02 \x01(\v2\x16.common.DayMarketHoursR\x06monday\x120\n" +
	"\atuesday\x18\x03 \x01(\v2\x16.common.DayMarketHoursR\atuesday\x124\n" +
	"\twednesday\x18\x04 \x01(\v2\x16.common.DayMarketHoursR\twednesday\x122\n" +
	"\bthursday\x18\x05 \x01(\v2\x16.common.DayMarketHoursR\bthursday\x12.\n" +
	"\x06friday\x18\x06 \x01(\v2\x16.common.DayMarketHoursR\x06friday\x122\n" +
	"\bsaturday\x18\a \x01(\v2\x16.common.DayMarketHoursR\bsaturday\x12.\n" +
	"\x06sunday\x18\b \x01(\v2\x16.common.DayMarketHoursR\x06sunday\"'\n" +
	"\rSymbolRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol*+\n" +
	"\tOrderType\x12\t\n" +
	"\x05LIMIT\x10\x00\x12\n" +
	"\n" +
	"\x06MARKET\x10\x01\x12\a\n" +
	"\x03ALO\x10\x03*#\n" +
	"\x0eOrderDirection\x12\a\n" +
	"\x03BUY\x10\x00\x12\b\n" +
	"\x04SELL\x10\x01*-\n" +
	"\x10OrderTimeInForce\x12\a\n" +
	"\x03GTC\x10\x00\x12\a\n" +
	"\x03IOC\x10\x01\x12\a\n" +
	"\x03FOK\x10\x02*8\n" +
	"\vOrderAction\x12\a\n" +
	"\x03NEW\x10\x00\x12\n" +
	"\n" +
	"\x06MODIFY\x10\x01\x12\n" +
	"\n" +
	"\x06CANCEL\x10\x02\x12\b\n" +
	"\x04FILL\x10\x04*\x96\x05\n" +
	"\vOrderStatus\x12\a\n" +
	"\x03ACK\x10\x00\x12\n" +
	"\n" +
	"\x06FILLED\x10\x02\x12\f\n" +
	"\bMODIFIED\x10\x14\x12\r\n" +
	"\tCANCELLED\x10\x1e\x12\x11\n" +
	"\rCANCELLED_STP\x10\x1f\x12\f\n" +
	"\bREJECTED\x102\x12\x11\n" +
	"\rNO_SUCH_ORDER\x104\x12\x16\n" +
	"\x12INVALID_ORDER_TYPE\x105\x12\x0e\n" +
	"\n" +
	"BAD_SYMBOL\x106\x12\x1d\n" +
	"\x19PRICE_LESS_THAN_MIN_PRICE\x107\x12 \n" +
	"\x1cPRICE_GREATER_THAN_MAX_PRICE\x108\x12\x1e\n" +
	"\x1aCANNOT_MODIFY_PARTIAL_FILL\x10:\x12\x17\n" +
	"\x13FAILED_MARGIN_CHECK\x10<\x12%\n" +
	"!INVALID_TICK_SIZE_PRECISION_PRICE\x10?\x12(\n" +
	"$INVALID_TICK_SIZE_PRECISION_QUANTITY\x10@\x12#\n" +
	"\x1fQUANTITY_LESS_THAN_MIN_QUANTITY\x10A\x12&\n" +
	"\"QUANTITY_GREATER_THAN_MAX_QUANTITY\x10B\x12(\n" +
	"$REJECTED_GREATER_THAN_MAX_PRICE_BAND\x10C\x12%\n" +
	"!REJECTED_LESS_THAN_MIN_PRICE_BAND\x10D\x12\x19\n" +
	"\x15INVALID_TIME_IN_FORCE\x10E\x12&\n" +
	"\"REJECTED_WOULD_BREACH_MAX_POSITION\x10F\x12\x1f\n" +
	"\x1bCANNOT_MODIFY_NO_SUCH_ORDER\x10G\x12\x1a\n" +
	"\x16REJECTED_MARKET_CLOSED\x10H\x12\x10\n" +
	"\fRATE_LIMITED\x10a*6\n" +
	"\fSymbolStatus\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x00\x12\f\n" +
	"\bINACTIVE\x10\x01\x12\f\n" +
	"\bDELISTED\x10\x02*\x87\x01\n" +
	"\x0fCandlesInterval\x12\x0e\n" +
	"\n" +
	"ONE_MINUTE\x10\x00\x12\x10\n" +
	"\fFIVE_MINUTES\x10\x02\x12\x13\n" +
	"\x0fFIFTEEN_MINUTES\x10\x03\x12\x12\n" +
	"\x0eTHIRTY_MINUTES\x10\x04\x12\f\n" +
	"\bONE_HOUR\x10\x05\x12\x0e\n" +
	"\n" +
	"FOUR_HOURS\x10\x06\x12\v\n" +
	"\aONE_DAY\x10\aB<\n" +
	"\x0fcom.qfex.commonP\x01Z'github.com/QFEX-org/proto/common;commonb\x06proto3"

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData []byte
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)))
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_common_proto_goTypes = []any{
	(OrderType)(0),                // 0: common.OrderType
	(OrderDirection)(0),           // 1: common.OrderDirection
	(OrderTimeInForce)(0),         // 2: common.OrderTimeInForce
	(OrderAction)(0),              // 3: common.OrderAction
	(OrderStatus)(0),              // 4: common.OrderStatus
	(SymbolStatus)(0),             // 5: common.SymbolStatus
	(CandlesInterval)(0),          // 6: common.CandlesInterval
	(*Empty)(nil),                 // 7: common.Empty
	(*AckResponse)(nil),           // 8: common.AckResponse
	(*ListRequest)(nil),           // 9: common.ListRequest
	(*TradePublic)(nil),           // 10: common.TradePublic
	(*GetUserLimitRequest)(nil),   // 11: common.GetUserLimitRequest
	(*TradesPublic)(nil),          // 12: common.TradesPublic
	(*UserRequest)(nil),           // 13: common.UserRequest
	(*OrderBookEntry)(nil),        // 14: common.OrderBookEntry
	(*OrderBook)(nil),             // 15: common.OrderBook
	(*BalancePublic)(nil),         // 16: common.BalancePublic
	(*AppendOrderRequest)(nil),    // 17: common.AppendOrderRequest
	(*Underlier)(nil),             // 18: common.Underlier
	(*FundingRate)(nil),           // 19: common.FundingRate
	(*AllOrdersResponse)(nil),     // 20: common.AllOrdersResponse
	(*TradeVolume)(nil),           // 21: common.TradeVolume
	(*CandleInternal)(nil),        // 22: common.CandleInternal
	(*DayMarketHours)(nil),        // 23: common.DayMarketHours
	(*MarketHours)(nil),           // 24: common.MarketHours
	(*SymbolRequest)(nil),         // 25: common.SymbolRequest
	(*timestamppb.Timestamp)(nil), // 26: google.protobuf.Timestamp
}
var file_common_proto_depIdxs = []int32{
	26, // 0: common.AckResponse.timestamp:type_name -> google.protobuf.Timestamp
	26, // 1: common.TradePublic.order_timestamp:type_name -> google.protobuf.Timestamp
	1,  // 2: common.TradePublic.aggressor_side:type_name -> common.OrderDirection
	10, // 3: common.TradesPublic.trades:type_name -> common.TradePublic
	26, // 4: common.TradesPublic.timestamp:type_name -> google.protobuf.Timestamp
	26, // 5: common.OrderBook.timestamp:type_name -> google.protobuf.Timestamp
	14, // 6: common.OrderBook.bids:type_name -> common.OrderBookEntry
	14, // 7: common.OrderBook.asks:type_name -> common.OrderBookEntry
	26, // 8: common.BalancePublic.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 9: common.AppendOrderRequest.side:type_name -> common.OrderDirection
	0,  // 10: common.AppendOrderRequest.type:type_name -> common.OrderType
	2,  // 11: common.AppendOrderRequest.time_in_force:type_name -> common.OrderTimeInForce
	3,  // 12: common.AppendOrderRequest.order_action:type_name -> common.OrderAction
	14, // 13: common.AppendOrderRequest.best_bid:type_name -> common.OrderBookEntry
	14, // 14: common.AppendOrderRequest.best_ask:type_name -> common.OrderBookEntry
	4,  // 15: common.AppendOrderRequest.order_status:type_name -> common.OrderStatus
	26, // 16: common.AppendOrderRequest.port_ingress_entry_time:type_name -> google.protobuf.Timestamp
	26, // 17: common.AppendOrderRequest.port_ingress_exit_time:type_name -> google.protobuf.Timestamp
	26, // 18: common.AppendOrderRequest.user_service_ingress_entry_time:type_name -> google.protobuf.Timestamp
	26, // 19: common.AppendOrderRequest.user_service_ingress_exit_time:type_name -> google.protobuf.Timestamp
	26, // 20: common.AppendOrderRequest.engine_entry_time:type_name -> google.protobuf.Timestamp
	26, // 21: common.AppendOrderRequest.engine_exit_time:type_name -> google.protobuf.Timestamp
	26, // 22: common.AppendOrderRequest.user_service_egress_entry_time:type_name -> google.protobuf.Timestamp
	26, // 23: common.AppendOrderRequest.user_service_egress_exit_time:type_name -> google.protobuf.Timestamp
	26, // 24: common.AppendOrderRequest.port_egress_entry_time:type_name -> google.protobuf.Timestamp
	26, // 25: common.AppendOrderRequest.timestamp:type_name -> google.protobuf.Timestamp
	26, // 26: common.Underlier.timestamp:type_name -> google.protobuf.Timestamp
	26, // 27: common.FundingRate.timestamp:type_name -> google.protobuf.Timestamp
	17, // 28: common.AllOrdersResponse.orders:type_name -> common.AppendOrderRequest
	26, // 29: common.AllOrdersResponse.timestamp:type_name -> google.protobuf.Timestamp
	26, // 30: common.TradeVolume.timestamp:type_name -> google.protobuf.Timestamp
	26, // 31: common.CandleInternal.timestamp:type_name -> google.protobuf.Timestamp
	23, // 32: common.MarketHours.monday:type_name -> common.DayMarketHours
	23, // 33: common.MarketHours.tuesday:type_name -> common.DayMarketHours
	23, // 34: common.MarketHours.wednesday:type_name -> common.DayMarketHours
	23, // 35: common.MarketHours.thursday:type_name -> common.DayMarketHours
	23, // 36: common.MarketHours.friday:type_name -> common.DayMarketHours
	23, // 37: common.MarketHours.saturday:type_name -> common.DayMarketHours
	23, // 38: common.MarketHours.sunday:type_name -> common.DayMarketHours
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	file_common_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}

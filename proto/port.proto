syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "common.proto";

option java_package = "com.qfex.port";
option java_multiple_files = true;
option go_package = "github.com/QFEX-org/proto/port;port";
package port;

service PortService {
    rpc StreamOrders (stream OrdersStreamRequest) returns (stream OrderResponse);

    rpc GetOrder (GetOrderRequest) returns (OrderResponse);
    rpc GetUserOrders (common.ListRequest) returns (AllOrdersResponse);
    rpc CancelAllOrders (CancelAllOrdersRequest) returns (common.AckResponse);

    rpc ReloadUsers(common.Empty) returns (common.AckResponse);

    rpc GetUserTrades(common.ListRequest) returns (TradesPublic);
    rpc GetUserPositions(common.Empty) returns (stream PositionsPublic);
    rpc GetUserBalance(common.Empty) returns (stream BalancePublic);

    rpc GetAvailableLeverageLevels(common.ListRequest) returns (LeveragesPublic);
    rpc GetUserLeverage(common.ListRequest) returns (LeveragesPublic);
    rpc SetUserLeverage(SetLeverageRequest) returns(common.AckResponse);
}


message AddOrderRequest {
    string symbol = 1;
    common.OrderDirection side = 2;
    common.OrderType type = 3;
    common.OrderTimeInForce time_in_force = 4;
    double quantity = 5;                         // Order quantity
    double price = 6;                  // Order price (optional for MARKET)
    optional string client_order_id = 7;    // Client order ID. Autogenerated if not sent
    google.protobuf.Timestamp timestamp = 9;    // Unix timestamp in nanoseconds
}

message CancelOrderRequest {
    oneof order_id_choice {
        string order_id = 1;
        string client_order_id = 2;
    }
    string symbol = 3;
}

message ModifyOrderRequest {
    string symbol = 1;           // Trading pair, e.g., "BTCUSDT"
    string order_id = 2;         // Order ID
    double original_quantity = 3;         // Order quantity
    double quantity = 4;         // Order quantity
    double price = 5;            // Order price
    common.OrderDirection side = 6;
    google.protobuf.Timestamp timestamp = 7;        // Unix timestamp in milliseconds
    google.protobuf.Timestamp update_time = 8;        // Unix timestamp in milliseconds
}

message GetOrderRequest {
    string order_id = 1;
    string symbol = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message SetLeverageRequest {
    string symbol = 1;
    float leverage = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message LeveragesPublic{
    repeated LeveragePublic leverages = 1;
    string user_id = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message LeveragePublic {
    string id = 1;
    string symbol = 2;
    double initial_margin = 3;
    double maintenance_margin = 4;
    double max_position = 5;
    string leverage = 6;
}

message OrderResponse {
    string order_id = 1;
    string symbol = 2;
    common.OrderStatus status = 3;
    double quantity = 5;
    double price = 6;
    common.OrderDirection side = 7;
    common.OrderType type = 8;
    common.OrderTimeInForce time_in_force = 9;
    google.protobuf.Timestamp update_time = 10;
    string user_id = 11;
    string client_order_id = 12;
    double quantity_remaining = 13;
}

message AllOrdersResponse {
    repeated OrderResponse orders = 1;
    google.protobuf.Timestamp timestamp = 2;
    int32 count = 3;
}

message TradePublic {
    string trade_id = 1;
    string symbol = 2;
    double price = 3;
    double quantity = 4;
    google.protobuf.Timestamp order_timestamp = 5;

    common.OrderDirection aggressor_side = 6;
    string buy_order_id = 8;
    string sell_order_id = 9;
    string buy_user_id = 10;
    string sell_user_id = 11;
    double buy_fee = 12;
    double sell_fee = 13;
}

message TradesPublic {
    repeated TradePublic trades = 1;
    google.protobuf.Timestamp timestamp = 2;
    int32 count = 3;
}

message PositionPublic {
    string id = 1;
    string symbol = 2;
    string user_id = 3;
    double position = 4;
    double margin_alloc = 8;
    double realised_pnl = 9;
    double unrealised_pnl = 10;
    double net_funding = 11;
    double open_orders = 12;
    double open_quantity = 14;
    double leverage = 16;
    double initial_margin = 17;
    double maintenance_margin = 18;
    double average_price = 19;

    google.protobuf.Timestamp timestamp = 99;
}
  
message PositionsPublic {
    repeated PositionPublic data = 1;
    int64 count = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message BalancePublic {
    string id = 1;
    string user_id = 2;
    float deposit = 3;
    float realised_pnl = 4;
    float order_margin = 5;
    float position_margin = 6;
    float unrealised_pnl = 7;
    float net_funding = 8;  
    float available_balance = 9;
    google.protobuf.Timestamp timestamp = 99;
}

message OrdersStreamRequest {
    oneof request_type {
        AddOrderRequest add_order = 1;
        CancelOrderRequest cancel_order = 2;
        ModifyOrderRequest modify_order = 3;
    }   
}

message CancelAllOrdersRequest {
    repeated string symbols = 1;
}
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: market_data.proto

package market_data

import (
	common "github.com/QFEX-org/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSymbol struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSymbol) Reset() {
	*x = GetSymbol{}
	mi := &file_market_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbol) ProtoMessage() {}

func (x *GetSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbol.ProtoReflect.Descriptor instead.
func (*GetSymbol) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{0}
}

func (x *GetSymbol) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type GetCandle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      common.CandlesInterval `protobuf:"varint,2,opt,name=interval,proto3,enum=common.CandlesInterval" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCandle) Reset() {
	*x = GetCandle{}
	mi := &file_market_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandle) ProtoMessage() {}

func (x *GetCandle) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandle.ProtoReflect.Descriptor instead.
func (*GetCandle) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{1}
}

func (x *GetCandle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetCandle) GetInterval() common.CandlesInterval {
	if x != nil {
		return x.Interval
	}
	return common.CandlesInterval(0)
}

type OrderBookEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float64                `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      float64                `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookEntry) Reset() {
	*x = OrderBookEntry{}
	mi := &file_market_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookEntry) ProtoMessage() {}

func (x *OrderBookEntry) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookEntry.ProtoReflect.Descriptor instead.
func (*OrderBookEntry) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{2}
}

func (x *OrderBookEntry) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderBookEntry) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type OrderBook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bids          []*OrderBookEntry      `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks          []*OrderBookEntry      `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	Sequence      int64                  `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBook) Reset() {
	*x = OrderBook{}
	mi := &file_market_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBook) ProtoMessage() {}

func (x *OrderBook) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBook.ProtoReflect.Descriptor instead.
func (*OrderBook) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{3}
}

func (x *OrderBook) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderBook) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OrderBook) GetBids() []*OrderBookEntry {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBook) GetAsks() []*OrderBookEntry {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBook) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type Trade struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TradeId        string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	Symbol         string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price          float64                `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity       float64                `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	TradeTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=trade_timestamp,json=tradeTimestamp,proto3" json:"trade_timestamp,omitempty"`
	AggressorSide  common.OrderDirection  `protobuf:"varint,6,opt,name=aggressor_side,json=aggressorSide,proto3,enum=common.OrderDirection" json:"aggressor_side,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_market_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{4}
}

func (x *Trade) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetTradeTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.TradeTimestamp
	}
	return nil
}

func (x *Trade) GetAggressorSide() common.OrderDirection {
	if x != nil {
		return x.AggressorSide
	}
	return common.OrderDirection(0)
}

type Underlier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         float64                `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Underlier) Reset() {
	*x = Underlier{}
	mi := &file_market_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Underlier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Underlier) ProtoMessage() {}

func (x *Underlier) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Underlier.ProtoReflect.Descriptor instead.
func (*Underlier) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{5}
}

func (x *Underlier) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Underlier) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Underlier) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type FundingRate struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Symbol               string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Rate                 float64                `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	TimeRemainingSeconds uint64                 `protobuf:"varint,3,opt,name=time_remaining_seconds,json=timeRemainingSeconds,proto3" json:"time_remaining_seconds,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FundingRate) Reset() {
	*x = FundingRate{}
	mi := &file_market_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundingRate) ProtoMessage() {}

func (x *FundingRate) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundingRate.ProtoReflect.Descriptor instead.
func (*FundingRate) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{6}
}

func (x *FundingRate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *FundingRate) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *FundingRate) GetTimeRemainingSeconds() uint64 {
	if x != nil {
		return x.TimeRemainingSeconds
	}
	return 0
}

func (x *FundingRate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SymbolRefData struct {
	state            protoimpl.MessageState    `protogen:"open.v1"`
	ClobPairId       string                    `protobuf:"bytes,1,opt,name=clobPairId,proto3" json:"clobPairId,omitempty"`
	Symbol           string                    `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Status           common.SymbolStatus       `protobuf:"varint,3,opt,name=status,proto3,enum=common.SymbolStatus" json:"status,omitempty"`
	UnderlierPrice   float64                   `protobuf:"fixed64,4,opt,name=underlier_price,json=underlierPrice,proto3" json:"underlier_price,omitempty"`
	PriceChange_24H  float64                   `protobuf:"fixed64,5,opt,name=price_change_24h,json=priceChange24h,proto3" json:"price_change_24h,omitempty"`
	Volume_24H       float64                   `protobuf:"fixed64,6,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	Trades_24H       float64                   `protobuf:"fixed64,7,opt,name=trades_24h,json=trades24h,proto3" json:"trades_24h,omitempty"`
	NextFundingRate  float64                   `protobuf:"fixed64,8,opt,name=next_funding_rate,json=nextFundingRate,proto3" json:"next_funding_rate,omitempty"`
	TickSize         string                    `protobuf:"bytes,11,opt,name=tick_size,json=tickSize,proto3" json:"tick_size,omitempty"`
	LotSize          string                    `protobuf:"bytes,12,opt,name=lot_size,json=lotSize,proto3" json:"lot_size,omitempty"`
	MinPrice         string                    `protobuf:"bytes,13,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice         string                    `protobuf:"bytes,14,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	MinQuantity      string                    `protobuf:"bytes,15,opt,name=min_quantity,json=minQuantity,proto3" json:"min_quantity,omitempty"`
	MaxQuantity      string                    `protobuf:"bytes,16,opt,name=max_quantity,json=maxQuantity,proto3" json:"max_quantity,omitempty"`
	BaseAsset        string                    `protobuf:"bytes,17,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	QuoteAsset       string                    `protobuf:"bytes,18,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
	MarginAsset      string                    `protobuf:"bytes,19,opt,name=margin_asset,json=marginAsset,proto3" json:"margin_asset,omitempty"`
	OrderTimeInForce []common.OrderTimeInForce `protobuf:"varint,20,rep,packed,name=order_time_in_force,json=orderTimeInForce,proto3,enum=common.OrderTimeInForce" json:"order_time_in_force,omitempty"`
	OrderTypes       []common.OrderType        `protobuf:"varint,21,rep,packed,name=order_types,json=orderTypes,proto3,enum=common.OrderType" json:"order_types,omitempty"`
	MarketHours      *common.MarketHours       `protobuf:"bytes,22,opt,name=market_hours,json=marketHours,proto3" json:"market_hours,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SymbolRefData) Reset() {
	*x = SymbolRefData{}
	mi := &file_market_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolRefData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRefData) ProtoMessage() {}

func (x *SymbolRefData) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRefData.ProtoReflect.Descriptor instead.
func (*SymbolRefData) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{7}
}

func (x *SymbolRefData) GetClobPairId() string {
	if x != nil {
		return x.ClobPairId
	}
	return ""
}

func (x *SymbolRefData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SymbolRefData) GetStatus() common.SymbolStatus {
	if x != nil {
		return x.Status
	}
	return common.SymbolStatus(0)
}

func (x *SymbolRefData) GetUnderlierPrice() float64 {
	if x != nil {
		return x.UnderlierPrice
	}
	return 0
}

func (x *SymbolRefData) GetPriceChange_24H() float64 {
	if x != nil {
		return x.PriceChange_24H
	}
	return 0
}

func (x *SymbolRefData) GetVolume_24H() float64 {
	if x != nil {
		return x.Volume_24H
	}
	return 0
}

func (x *SymbolRefData) GetTrades_24H() float64 {
	if x != nil {
		return x.Trades_24H
	}
	return 0
}

func (x *SymbolRefData) GetNextFundingRate() float64 {
	if x != nil {
		return x.NextFundingRate
	}
	return 0
}

func (x *SymbolRefData) GetTickSize() string {
	if x != nil {
		return x.TickSize
	}
	return ""
}

func (x *SymbolRefData) GetLotSize() string {
	if x != nil {
		return x.LotSize
	}
	return ""
}

func (x *SymbolRefData) GetMinPrice() string {
	if x != nil {
		return x.MinPrice
	}
	return ""
}

func (x *SymbolRefData) GetMaxPrice() string {
	if x != nil {
		return x.MaxPrice
	}
	return ""
}

func (x *SymbolRefData) GetMinQuantity() string {
	if x != nil {
		return x.MinQuantity
	}
	return ""
}

func (x *SymbolRefData) GetMaxQuantity() string {
	if x != nil {
		return x.MaxQuantity
	}
	return ""
}

func (x *SymbolRefData) GetBaseAsset() string {
	if x != nil {
		return x.BaseAsset
	}
	return ""
}

func (x *SymbolRefData) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *SymbolRefData) GetMarginAsset() string {
	if x != nil {
		return x.MarginAsset
	}
	return ""
}

func (x *SymbolRefData) GetOrderTimeInForce() []common.OrderTimeInForce {
	if x != nil {
		return x.OrderTimeInForce
	}
	return nil
}

func (x *SymbolRefData) GetOrderTypes() []common.OrderType {
	if x != nil {
		return x.OrderTypes
	}
	return nil
}

func (x *SymbolRefData) GetMarketHours() *common.MarketHours {
	if x != nil {
		return x.MarketHours
	}
	return nil
}

type RefData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []*SymbolRefData       `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefData) Reset() {
	*x = RefData{}
	mi := &file_market_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefData) ProtoMessage() {}

func (x *RefData) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefData.ProtoReflect.Descriptor instead.
func (*RefData) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{8}
}

func (x *RefData) GetSymbols() []*SymbolRefData {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *RefData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Candle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open          float64                `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`
	High          float64                `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`
	Low           float64                `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Close         float64                `protobuf:"fixed64,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume        float64                `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Period        int64                  `protobuf:"varint,8,opt,name=period,proto3" json:"period,omitempty"` // in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Candle) Reset() {
	*x = Candle{}
	mi := &file_market_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_market_data_proto_rawDescGZIP(), []int{9}
}

func (x *Candle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Candle) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Candle) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candle) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candle) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Candle) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candle) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Candle) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

var File_market_data_proto protoreflect.FileDescriptor

const file_market_data_proto_rawDesc = "" +
	"\n" +
	"\x11market_data.proto\x12\vmarket_data\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\fcommon.proto\"#\n" +
	"\tGetSymbol\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"X\n" +
	"\tGetCandle\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x123\n" +
	"\binterval\x18\x02 \x01(\x0e2\x17.common.CandlesIntervalR\binterval\"B\n" +
	"\x0eOrderBookEntry\x12\x14\n" +
	"\x05price\x18\x01 \x01(\x01R\x05price\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x01R\bquantity\"\xdb\x01\n" +
	"\tOrderBook\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12/\n" +
	"\x04bids\x18\x03 \x03(\v2\x1b.market_data.OrderBookEntryR\x04bids\x12/\n" +
	"\x04asks\x18\x04 \x03(\v2\x1b.market_data.OrderBookEntryR\x04asks\x12\x1a\n" +
	"\bsequence\x18\x05 \x01(\x03R\bsequence\"\xf0\x01\n" +
	"\x05Trade\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\tR\atradeId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x01R\x05price\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x01R\bquantity\x12C\n" +
	"\x0ftrade_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0etradeTimestamp\x12=\n" +
	"\x0eaggressor_side\x18\x06 \x01(\x0e2\x16.common.OrderDirectionR\raggressorSide\"s\n" +
	"\tUnderlier\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x01R\x05price\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xa9\x01\n" +
	"\vFundingRate\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04rate\x18\x02 \x01(\x01R\x04rate\x124\n" +
	"\x16time_remaining_seconds\x18\x03 \x01(\x04R\x14timeRemainingSeconds\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x82\x06\n" +
	"\rSymbolRefData\x12\x1e\n" +
	"\n" +
	"clobPairId\x18\x01 \x01(\tR\n" +
	"clobPairId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.common.SymbolStatusR\x06status\x12'\n" +
	"\x0funderlier_price\x18\x04 \x01(\x01R\x0eunderlierPrice\x12(\n" +
	"\x10price_change_24h\x18\x05 \x01(\x01R\x0epriceChange24h\x12\x1d\n" +
	"\n" +
	"volume_24h\x18\x06 \x01(\x01R\tvolume24h\x12\x1d\n" +
	"\n" +
	"trades_24h\x18\a \x01(\x01R\ttrades24h\x12*\n" +
	"\x11next_funding_rate\x18\b \x01(\x01R\x0fnextFundingRate\x12\x1b\n" +
	"\ttick_size\x18\v \x01(\tR\btickSize\x12\x19\n" +
	"\blot_size\x18\f \x01(\tR\alotSize\x12\x1b\n" +
	"\tmin_price\x18\r \x01(\tR\bminPrice\x12\x1b\n" +
	"\tmax_price\x18\x0e \x01(\tR\bmaxPrice\x12!\n" +
	"\fmin_quantity\x18\x0f \x01(\tR\vminQuantity\x12!\n" +
	"\fmax_quantity\x18\x10 \x01(\tR\vmaxQuantity\x12\x1d\n" +
	"\n" +
	"base_asset\x18\x11 \x01(\tR\tbaseAsset\x12\x1f\n" +
	"\vquote_asset\x18\x12 \x01(\tR\n" +
	"quoteAsset\x12!\n" +
	"\fmargin_asset\x18\x13 \x01(\tR\vmarginAsset\x12G\n" +
	"\x13order_time_in_force\x18\x14 \x03(\x0e2\x18.common.OrderTimeInForceR\x10orderTimeInForce\x122\n" +
	"\vorder_types\x18\x15 \x03(\x0e2\x11.common.OrderTypeR\n" +
	"orderTypes\x126\n" +
	"\fmarket_hours\x18\x16 \x01(\v2\x13.common.MarketHoursR\vmarketHours\"y\n" +
	"\aRefData\x124\n" +
	"\asymbols\x18\x01 \x03(\v2\x1a.market_data.SymbolRefDataR\asymbols\x128\n" +
	"\ttimestamp\x18c \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xda\x01\n" +
	"\x06Candle\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x01R\x04open\x12\x12\n" +
	"\x04high\x18\x04 \x01(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\x05 \x01(\x01R\x03low\x12\x14\n" +
	"\x05close\x18\x06 \x01(\x01R\x05close\x12\x16\n" +
	"\x06volume\x18\a \x01(\x01R\x06volume\x12\x16\n" +
	"\x06period\x18\b \x01(\x03R\x06period2\xc0\x03\n" +
	"\x11MarketDataService\x12@\n" +
	"\fGetOrderBook\x12\x16.market_data.GetSymbol\x1a\x16.market_data.OrderBook0\x01\x129\n" +
	"\tGetTrades\x12\x16.market_data.GetSymbol\x1a\x12.market_data.Trade0\x01\x12@\n" +
	"\fGetUnderlier\x12\x16.market_data.GetSymbol\x1a\x16.market_data.Underlier0\x01\x12D\n" +
	"\x0eGetFundingRate\x12\x16.market_data.GetSymbol\x1a\x18.market_data.FundingRate0\x01\x121\n" +
	"\n" +
	"GetRefData\x12\r.common.Empty\x1a\x14.market_data.RefData\x121\n" +
	"\x06GetBbo\x12\r.common.Empty\x1a\x16.market_data.OrderBook0\x01\x12@\n" +
	"\x0fGetLatestCandle\x12\x16.market_data.GetCandle\x1a\x13.market_data.Candle0\x01BK\n" +
	"\x14com.qfex.market_dataP\x01Z1github.com/QFEX-org/proto/market_data;market_datab\x06proto3"

var (
	file_market_data_proto_rawDescOnce sync.Once
	file_market_data_proto_rawDescData []byte
)

func file_market_data_proto_rawDescGZIP() []byte {
	file_market_data_proto_rawDescOnce.Do(func() {
		file_market_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_market_data_proto_rawDesc), len(file_market_data_proto_rawDesc)))
	})
	return file_market_data_proto_rawDescData
}

var file_market_data_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_market_data_proto_goTypes = []any{
	(*GetSymbol)(nil),             // 0: market_data.GetSymbol
	(*GetCandle)(nil),             // 1: market_data.GetCandle
	(*OrderBookEntry)(nil),        // 2: market_data.OrderBookEntry
	(*OrderBook)(nil),             // 3: market_data.OrderBook
	(*Trade)(nil),                 // 4: market_data.Trade
	(*Underlier)(nil),             // 5: market_data.Underlier
	(*FundingRate)(nil),           // 6: market_data.FundingRate
	(*SymbolRefData)(nil),         // 7: market_data.SymbolRefData
	(*RefData)(nil),               // 8: market_data.RefData
	(*Candle)(nil),                // 9: market_data.Candle
	(common.CandlesInterval)(0),   // 10: common.CandlesInterval
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(common.OrderDirection)(0),    // 12: common.OrderDirection
	(common.SymbolStatus)(0),      // 13: common.SymbolStatus
	(common.OrderTimeInForce)(0),  // 14: common.OrderTimeInForce
	(common.OrderType)(0),         // 15: common.OrderType
	(*common.MarketHours)(nil),    // 16: common.MarketHours
	(*common.Empty)(nil),          // 17: common.Empty
}
var file_market_data_proto_depIdxs = []int32{
	10, // 0: market_data.GetCandle.interval:type_name -> common.CandlesInterval
	11, // 1: market_data.OrderBook.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 2: market_data.OrderBook.bids:type_name -> market_data.OrderBookEntry
	2,  // 3: market_data.OrderBook.asks:type_name -> market_data.OrderBookEntry
	11, // 4: market_data.Trade.trade_timestamp:type_name -> google.protobuf.Timestamp
	12, // 5: market_data.Trade.aggressor_side:type_name -> common.OrderDirection
	11, // 6: market_data.Underlier.timestamp:type_name -> google.protobuf.Timestamp
	11, // 7: market_data.FundingRate.timestamp:type_name -> google.protobuf.Timestamp
	13, // 8: market_data.SymbolRefData.status:type_name -> common.SymbolStatus
	14, // 9: market_data.SymbolRefData.order_time_in_force:type_name -> common.OrderTimeInForce
	15, // 10: market_data.SymbolRefData.order_types:type_name -> common.OrderType
	16, // 11: market_data.SymbolRefData.market_hours:type_name -> common.MarketHours
	7,  // 12: market_data.RefData.symbols:type_name -> market_data.SymbolRefData
	11, // 13: market_data.RefData.timestamp:type_name -> google.protobuf.Timestamp
	11, // 14: market_data.Candle.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 15: market_data.MarketDataService.GetOrderBook:input_type -> market_data.GetSymbol
	0,  // 16: market_data.MarketDataService.GetTrades:input_type -> market_data.GetSymbol
	0,  // 17: market_data.MarketDataService.GetUnderlier:input_type -> market_data.GetSymbol
	0,  // 18: market_data.MarketDataService.GetFundingRate:input_type -> market_data.GetSymbol
	17, // 19: market_data.MarketDataService.GetRefData:input_type -> common.Empty
	17, // 20: market_data.MarketDataService.GetBbo:input_type -> common.Empty
	1,  // 21: market_data.MarketDataService.GetLatestCandle:input_type -> market_data.GetCandle
	3,  // 22: market_data.MarketDataService.GetOrderBook:output_type -> market_data.OrderBook
	4,  // 23: market_data.MarketDataService.GetTrades:output_type -> market_data.Trade
	5,  // 24: market_data.MarketDataService.GetUnderlier:output_type -> market_data.Underlier
	6,  // 25: market_data.MarketDataService.GetFundingRate:output_type -> market_data.FundingRate
	8,  // 26: market_data.MarketDataService.GetRefData:output_type -> market_data.RefData
	3,  // 27: market_data.MarketDataService.GetBbo:output_type -> market_data.OrderBook
	9,  // 28: market_data.MarketDataService.GetLatestCandle:output_type -> market_data.Candle
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_market_data_proto_init() }
func file_market_data_proto_init() {
	if File_market_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_market_data_proto_rawDesc), len(file_market_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_market_data_proto_goTypes,
		DependencyIndexes: file_market_data_proto_depIdxs,
		MessageInfos:      file_market_data_proto_msgTypes,
	}.Build()
	File_market_data_proto = out.File
	file_market_data_proto_goTypes = nil
	file_market_data_proto_depIdxs = nil
}
